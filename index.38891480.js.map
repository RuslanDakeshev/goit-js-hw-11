{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,QAC9BC,EAAOF,SAASC,cAAc,SAC9BE,EAASH,SAASC,cAAc,SAQtC,IAAIG,EAAc,EACdC,EAAU,GAsBoC,SAAzCC,EAAUC,EAAMC,IApBH,SAAFD,EAAMC,GACxB,MAAMC,EAAS,IAAIC,gBAAgB,CACjCC,IAPQ,qC,KAQRJ,E,EACAC,EACAI,SAAU,KAGa,OAAlBC,MAAM,4BAAeJ,KACzBK,MAAKC,IAEoB,IAAnBA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAGrB,OAACH,EAASI,MAAM,IAEvBC,OAAMC,GAASC,QAAQC,IAAIF,I,EAI9BG,CAAWjB,EAAMC,GAAGM,MAAKW,KA0Bb,SAAQC,GACpB,MAAMC,EAASD,EACZE,KACC,EAACC,aACCA,EAAYC,cACZA,EAAaC,KACbA,EAAIC,MACJA,EAAKC,MACLA,EAAKC,SACLA,EAAQC,UACRA,KAEO,0CACAN,gDAC2BC,WAAuBC,+JAK/CC,kGAIAC,qGAIAC,sGAIAC,qDAMbC,KAAK,IACRlC,EAAKmC,mBAAmB,YAAaV,E,CAvDnCW,CAReb,EAAKc,MAiBpBnC,GAAe,EAEfD,EAAOqC,UAAUC,OAAO,YAAY,G,CAiDb1C,EAAtB2C,iBAAiB,UAAUC,IAC9BA,EAAMC,iBACN,MAAMC,EAAQF,EAAMG,OAAOC,SAASC,YAAYC,MAChD5C,EAAUwC,EACVzC,EAAc,EACdF,EAAKgD,UAAY,GACZL,GAGLvC,EAAUF,EAAayC,EAAM,IAGK1C,EAA7BuC,iBAAiB,SAAS,KAC/BpC,EAAUF,EAAaC,EAAQ","sources":["src/index.js"],"sourcesContent":["const form = document.querySelector('form');\nconst list = document.querySelector('.list');\nconst button = document.querySelector('.more');\n\n// const BASE_URL = 'https://app.ticketmaster.com/discovery/v2/events.json';\n// const API = '9cTjAjlRB53wyhAFk5VzXcBu5GiPU6fK';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API = '30624593-67a024fcb44d725cda2d85f07';\n\nlet pageToFetch = 0;\nlet keyword = '';\n// функция запроса на сервер//\nfunction fetchEvent(page, q) {\n  const params = new URLSearchParams({\n    key: API,\n    page,\n    q,\n    per_page: 40,\n  });\n  //возвращаем результат работы fetch//\n  return fetch(`${BASE_URL}?${params}`)\n    .then(response => {\n      //ответ с бекенда и проверка на 400//\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      //парсим json//\n      return response.json();\n    })\n    .catch(error => console.log(error));\n}\n//возвращает распарсеный json, data-значение переменной,hits-массив с бека//\nfunction getEvents(page, q) {\n  fetchEvent(page, q).then(data => {\n    const events = data.hits;\n    // if (events) {\n    //   renderEvents(events);\n    // }\n    // if (data.page.totalElements === 0) {\n    //   button.classList.add('invisible');\n    //   alert(`There are no events by keyword ${q}`)\n    // }\n    renderEvents(events);\n\n    //если последняя страница-скрываем кнопку\n    //  if (pageToFetch === totalPages) {\n    //    button.classList.add('invisible');\n    //    alert('Finish');\n    //    return;\n    //  }\n\n    pageToFetch += 1;\n    // if (data.page.totalPages > 1) {\n    button.classList.remove('invisible');\n    // }\n  });\n}\n// getEvents();\n//рендер разметки//\nfunction renderEvents(images) {\n  const markup = images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `<div class=\"photo-card\">\n    <a href=\"${webformatURL}\">\n      <img class=\"photo-card__img\" src=\"${largeImageURL}\" alt=\"${tags}\" loading=\"lazy\" width=\"320\" height=\"212\" />\n      </a>\n      <div class=\"info\">\n        <p class=\"info-item\">\n          <b>Likes</b>\n          <span>${likes}</span>\n        </p>\n        <p class=\"info-item\">\n          <b>Views</b>\n          <span>${views}</span>\n        </p>\n        <p class=\"info-item\">\n          <b>Comments</b>\n          <span>${comments}</span>\n        </p>\n        <p class=\"info-item\">\n          <b>Downloads</b>\n          <span>${downloads}</span>\n        </p>\n      </div>\n    </div>`;\n      }\n    )\n    .join('');\n  list.insertAdjacentHTML('beforeend', markup);\n}\n//при сабмите формы-поиск событий\n\n// //при сабмите формы-поиск событий\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const query = event.target.elements.searchQuery.value;\n  keyword = query;\n  pageToFetch = 1;\n  list.innerHTML = '';\n  if (!query) {\n    return;\n  }\n  getEvents(pageToFetch, query);\n});\n//подгружать собыития при нажатии на кнопку\nbutton.addEventListener('click', () => {\n  getEvents(pageToFetch, keyword);\n});\n\n\n\n\n\n///////////////////////////////////////////////////////////////\n\n// import { EventsApi } from './eventsApi.js';\n\n// const form = document.querySelector('form');\n// const list = document.querySelector('.list');\n// const button = document.querySelector('.more');\n\n// // const BASE_URL = 'https://app.ticketmaster.com/discovery/v2/events.json';\n// // const API = '9cTjAjlRB53wyhAFk5VzXcBu5GiPU6fK';\n\n// const eventsApi = new EventsApi(EventsApi.q);\n\n// eventsApi.fetchEvent().then(handleSucces).catch(handleError);\n\n// function handleSucces(data) {\n//   const events = data.hits;\n//   renderEvents(events);\n//    eventsApi.page += 1;\n//    // if (data.page.totalPages > 1) {\n//    button.classList.remove('invisible');\n// }\n\n// function renderEvents(images) {\n//   const markup = images\n//     .map(\n//       ({\n//         webformatURL,\n//         largeImageURL,\n//         tags,\n//         likes,\n//         views,\n//         comments,\n//         downloads,\n//       }) => {\n//         return `<div class=\"photo-card\">\n//     <a href=\"${webformatURL}\">\n//       <img class=\"photo-card__img\" src=\"${largeImageURL}\" alt=\"${tags}\" loading=\"lazy\" width=\"320\" height=\"212\" />\n//       </a>\n//       <div class=\"info\">\n//         <p class=\"info-item\">\n//           <b>Likes</b>\n//           <span>${likes}</span>\n//         </p>\n//         <p class=\"info-item\">\n//           <b>Views</b>\n//           <span>${views}</span>\n//         </p>\n//         <p class=\"info-item\">\n//           <b>Comments</b>\n//           <span>${comments}</span>\n//         </p>\n//         <p class=\"info-item\">\n//           <b>Downloads</b>\n//           <span>${downloads}</span>\n//         </p>\n//       </div>\n//     </div>`;\n//       }\n//     )\n//     .join('');\n//   list.insertAdjacentHTML('beforeend', markup);\n// }\n\n// function handleError(error) {\n//   console.log(error);\n// }\n\n// button.addEventListener('click', () => {\n//   eventsApi.page += 1;\n//   eventsApi.fetchEvent().then(handleSucces).catch(handleError);\n// })\n// // //возвращает распарсеный json, data-значение переменной,hits-массив с бека//\n// // function getEvents(page, q) {\n// //   fetchEvent();\n// //     // if (events) {\n// //     //   renderEvents(events);\n// //     // }\n// //     // if (data.page.totalElements === 0) {\n// //     //   button.classList.add('invisible');\n// //     //   alert(`There are no events by keyword ${q}`)\n// //     // }\n// //     renderEvents(events);\n\n// //     //если последняя страница-скрываем кнопку\n// //     //  if (pageToFetch === totalPages) {\n// //     //    button.classList.add('invisible');\n// //     //    alert('Finish');\n// //     //    return;\n// //     //  }\n\n// //     pageToFetch += 1;\n// //     // if (data.page.totalPages > 1) {\n// //     button.classList.remove('invisible');\n// //     // }\n// //   };\n\n// // // getEvents();\n// // //рендер разметки//\n\n// // //при сабмите формы-поиск событий\n// // form.addEventListener('submit', event => {\n// //   event.preventDefault();\n// //   const query = event.target.elements.searchQuery.value;\n// //   keyword = query;\n// //   pageToFetch = 1;\n// //   list.innerHTML = '';\n// //   if (!query) {\n// //     return;\n// //   }\n// //   getEvents(pageToFetch, query);\n// // });\n// // //подгружать собыития при нажатии на кнопку\n// // button.addEventListener('click', () => {\n// //   getEvents(pageToFetch, keyword);\n// // });\n\n// form.addEventListener('submit', event => {\n//   event.preventDefault();\n//   const query = event.target.elements.searchQuery.value;\n//   keyword = query;\n//   pageToFetch = 1;\n//   list.innerHTML = '';\n//   if (!query) {\n//     return;\n//   }\n//   // getEvents(pageToFetch, query);\n// });\n// //подгружать собыития при нажатии на кнопку\n// button.addEventListener('click', () => {\n//   // getEvents(eventsApi.page, keyword);\n// });\n"],"names":["$1f0dc3b9307be026$var$form","document","querySelector","$1f0dc3b9307be026$var$list","$1f0dc3b9307be026$var$button","$1f0dc3b9307be026$var$pageToFetch","$1f0dc3b9307be026$var$keyword","$1f0dc3b9307be026$var$getEvents","page","q","params","URLSearchParams","key","per_page","fetch","then","response","ok","Error","status","json","catch","error","console","log","$1f0dc3b9307be026$var$fetchEvent","data","images","markup","map","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","$1f0dc3b9307be026$var$renderEvents","hits","classList","remove","addEventListener","event","preventDefault","query","target","elements","searchQuery","value","innerHTML"],"version":3,"file":"index.38891480.js.map"}